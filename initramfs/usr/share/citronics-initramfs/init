#!/bin/sh
# shellcheck disable=SC1091

set -a

LOG_PREFIX="[Citronics]"

[ -e /etc/unudhcpd.conf ] && . /etc/unudhcpd.conf
. ./functions.sh
. /usr/share/misc/source_deviceinfo
[ -e /etc/os-release ] && . /etc/os-release
# provide a default for os-release's VERSION in case the file doesn't exist
VERSION="${VERSION:-unknown}"

INITRAMFS_PKG_VERSION="0.0.1"

export PATH=/usr/bin:/bin:/usr/sbin:/sbin
/bin/busybox --install -s

mount_proc_sys_dev

echo_kmsg "Setup firmware path..."
setup_firmware_path

echo_kmsg "Launch mdev..."
setup_mdev

echo_kmsg "Load relevant modules...."
load_modules /lib/modules/initramfs.load

echo_kmsg "Kill mdev since it's not needed anymore..."
kill mdev 2>/dev/null

debug_console=$(get_kernel_param "debug_console")
if [ "$debug_console" = "1" ]; then
    echo_kmsg "debug_console=1 detected on cmdline â€” skipping rootfs mount and falling back to debug console."
    fail_halt_boot
fi

rootfs=$(get_kernel_param "rootfs")
if [ -n "$rootfs" ]; then
    echo_kmsg "Attempting to map and if needed, resize rootfs partition..."
    map_and_resize_root_partition

    echo_kmsg "Mounting rootfs partition..."
    mount_rootfs

    if grep -q " /sysroot " /proc/mounts; then
        bootpart=$(get_kernel_param "bootpart")
        if [ -n "$bootpart" ]; then
            echo_kmsg "Mounting boot partition..."
            mount_boot_partition
        else
            echo_kmsg "No bootpart parameter found, skipping boot partition mounting."
        fi
        echo_kmsg "Restore consoles to original state..."
        restore_consoles

        echo_kmsg "Switching to /sysroot"
        exec switch_root /sysroot /sbin/init
    else
        echo_kmsg "Rootfs not mounted, launching debug_console..."
    fi
else
    echo_kmsg "No rootfs parameter found, skipping rootfs mounting."
fi

fail_halt_boot
